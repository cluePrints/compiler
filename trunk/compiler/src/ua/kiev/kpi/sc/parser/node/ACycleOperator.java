/* This file was generated by SableCC (http://www.sablecc.org/). */

package ua.kiev.kpi.sc.parser.node;

import ua.kiev.kpi.sc.parser.analysis.*;

@SuppressWarnings("nls")
public final class ACycleOperator extends POperator
{
    private PCycleOperator _cycleOperator_;

    public ACycleOperator()
    {
        // Constructor
    }

    public ACycleOperator(
        @SuppressWarnings("hiding") PCycleOperator _cycleOperator_)
    {
        // Constructor
        setCycleOperator(_cycleOperator_);

    }

    @Override
    public Object clone()
    {
        return new ACycleOperator(
            cloneNode(this._cycleOperator_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACycleOperator(this);
    }

    public PCycleOperator getCycleOperator()
    {
        return this._cycleOperator_;
    }

    public void setCycleOperator(PCycleOperator node)
    {
        if(this._cycleOperator_ != null)
        {
            this._cycleOperator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cycleOperator_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._cycleOperator_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._cycleOperator_ == child)
        {
            this._cycleOperator_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._cycleOperator_ == oldChild)
        {
            setCycleOperator((PCycleOperator) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
