/* This file was generated by SableCC (http://www.sablecc.org/). */

package ua.kiev.kpi.sc.parser.node;

import ua.kiev.kpi.sc.parser.analysis.*;

@SuppressWarnings("nls")
public final class AStringLiteral extends PLiteral
{
    private PLiteralString _literalString_;

    public AStringLiteral()
    {
        // Constructor
    }

    public AStringLiteral(
        @SuppressWarnings("hiding") PLiteralString _literalString_)
    {
        // Constructor
        setLiteralString(_literalString_);

    }

    @Override
    public Object clone()
    {
        return new AStringLiteral(
            cloneNode(this._literalString_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStringLiteral(this);
    }

    public PLiteralString getLiteralString()
    {
        return this._literalString_;
    }

    public void setLiteralString(PLiteralString node)
    {
        if(this._literalString_ != null)
        {
            this._literalString_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._literalString_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._literalString_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._literalString_ == child)
        {
            this._literalString_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._literalString_ == oldChild)
        {
            setLiteralString((PLiteralString) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
