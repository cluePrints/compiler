<?xml version="1.0" encoding="utf-8"?>
<mx:VBox horizontalAlign="center"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:comp="components.*"
	xmlns:util="components.util.*"
	creationComplete="init()" width="978" height="551">
	<mx:Model id="formModel">		
		<root>
			<mode>"EDIT"</mode>
				
			<active>{cbActive.selected == true ? "1" : "0"}</active>
				
			<name>{encodeURIComponent(tiName.text)}</name>
		</root>		
	</mx:Model>		
	<mx:Model id="childModel">
		<root>
			<mode>EDIT</mode>
			
			<id></id>
			<active>{cbChildActive.selected == true ? "1" : "0"}</active>
			<changable>{cbChildFixed.selected == true ? "0" : "1"}</changable>
			<minimize>{cbChildMinimized.selected == true ? "1" : "0"}</minimize>
			
			<device>{dgData.selectedItem.id}</device>
			
			<name>{encodeURIComponent(tiChildName.text)}</name>
			<bestValue>{encodeURIComponent(tiChildBestValue.text)}</bestValue>
			<unit>{cbChildUnit.selectedItem.id}</unit>
		</root>					
	</mx:Model>
	<mx:HTTPService id="mainSvc" 
		useProxy="false"
		method="GET"
		
		result="httpResultHandler(event)"
		fault="util.httpFaultHandler(event)"/>
	<mx:HTTPService id="childSvc" 
		useProxy="false"
		method="GET"
		
		result="httpChildResultHandler(event)"
		fault="util.httpFaultHandler(event)"/>
	<mx:VBox>
		<mx:VBox horizontalAlign="center">	
		<mx:Script>
			<![CDATA[
				import mx.events.CollectionEvent;
				import mx.automation.codec.ArrayPropertyCodec;
				import mx.validators.RegExpValidator;
				import mx.utils.StringUtil;
				import mx.rpc.http.mxml.HTTPService;
				import flash.sampler.getInvocationCount;
				import mx.collections.ArrayCollection;
				import mx.controls.Alert;
				import components.Util;
				import components.SvcUrl;
				public var mainDataSvcUrl:String;
				public var childDataSvcUrl:String;
				public var hideEffect:*;
				[Bindable]
	            private var mainData:ArrayCollection = new ArrayCollection();
	            [Bindable]
	            private var selectedDeviceParameters:ArrayCollection = new ArrayCollection();
	            
	            [Bindable]
	            private var units:ArrayCollection = new ArrayCollection();;            
	            [Bindable]
	            private var availableUnits:ArrayCollection = new ArrayCollection();;
				
				[Bindable]
				public var editable:Boolean=true;
				
				[Bindable]
	            private var errors:ArrayCollection = new ArrayCollection();
	            
	            private var todayDate:*;
				var deviceParameters:ArrayCollection;
				// XXX: It's dumb, change it
				var util:Util = new Util();
				var svcUrl:SvcUrl = new SvcUrl();
				function childBindSelected():void{
					var item = dgChildData.selectedItem;
					childModel.id = item.id;			
					tiChildName.text = item.name;	
					tiChildBestValue.text = item.bestValue;
					cbChildUnit.selectedIndex = util.getItemPos(availableUnits, item.unit);
					cbChildActive.selected = (item.active == 1);
					cbChildFixed.selected = (item.changable == 0);
					cbChildMinimized.selected = (item.minimize == 1);
				}				
				function childSave():void{
					childSvc.cancel();
					childSvc.send(childModel);
				}
				
				function getParameterUnitName(item:Object, column:DataGridColumn):String{				
					var tmp = util.getItemById(units, item.unit);
					if (tmp == null) {
						return "";
					} else {
						return tmp.name;
					}					
				}
	            
				public function init():void{
					mainSvc.url = svcUrl.mainDeviceSvcUrl;
					childSvc.url = svcUrl.childDeviceSvcUrl;
					childCreateNew();
					createNew();				
					mainSvc.cancel();
					formModel.mode="FETCH";
					mainSvc.send(formModel);				
				}
				private var selectedMainId:int=-1;
				private var selectedParamId:int=-1;
				private function saveSelectionState():void{
					if (dgData.selectedItem != null) {
						selectedMainId = dgData.selectedItem.id;
					}
					if (dgChildData.selectedItem != null) {
						selectedParamId = dgChildData.selectedItem.id;
					}
				}
				private function loadSelectionState():void{
					if (selectedMainId>-1) {
						dgData.selectedIndex = util.getItemPos(mainData, selectedMainId);			
						bindSelected();
					}
					if (selectedParamId>-1) {
						dgChildData.selectedIndex = util.getItemPos(selectedDeviceParameters, selectedParamId);
					}			
				}
				private function httpResultHandler(event:*):void{
					saveSelectionState();
					todayDate = event.result.currentDate;
				lbToday.text = todayDate.toString();
					errors = util.getHttpRespondedErrors(event);
					mainData = util.extractItemCollection(event.result.mainData, 'device');
					deviceParameters = util.extractItemCollection(event.result.deviceParameters, 'deviceparameter');
					units = util.extractItemCollection(event.result.units, 'unit');
					availableUnits = util.getActiveItems(units);
					
					if (mainData != null) {
						mainData.filterFunction = mainFilterFunction;
					}
					
					loadSelectionState();
				} 
				private function httpChildResultHandler(event:*):void{
					saveSelectionState();
					
					errors = util.getHttpRespondedErrors(event);
					mainData = util.extractItemCollection(event.result.devices, 'device');
					deviceParameters = util.extractItemCollection(event.result.deviceParameters, 'deviceparameter');
					availableUnits = util.getActiveItems(units);
					
					loadSelectionState();
				} 
				private function mainFilterFunction(item:*){
					var result:Boolean=true;
					if (!cbShowNonActive.selected && item.active<=0)
						return false;
					if (!cbShowActive.selected && item.active>0)
						return false;					
					if (mx.utils.StringUtil.trim(edFilter.text).length>0) {
						if (!new RegExp(edFilter.text).test(item.name))
							return false;
					}
					return result;
				} 
				function bindSelected():void{				
					if (dgData.selectedIndex >= 0){
						cbActive.selected = (dgData.selectedItem.active == 1);
						formModel.id=dgData.selectedItem.id;
						tiName.text=dgData.selectedItem.name;										
						selectedDeviceParameters.removeAll();			
						if (deviceParameters == null) {return;}	
						for each (var deviceParameter in deviceParameters){
							if (deviceParameter.device == dgData.selectedItem.id){
								selectedDeviceParameters.addItem(deviceParameter);
							}
						}
						selectedDeviceParameters.refresh();
					}													
				}
				function createNew():void{
					formModel.id=null;
					cbActive.selected=true;
					tiName.text="<undefined>";			
				}
				function childCreateNew():void{
					childModel.id=null;
					cbChildActive.selected=true;
					cbChildMinimized.selected=true;
					cbChildFixed.selected=false;
					tiChildBestValue.text = "";				
					tiChildName.text="<undefined>";			
				}
				function cancel():void{
					bindSelected();
				}
				function saveSelected():void{
					formModel.mode="EDIT";
					mainSvc.cancel();	
					mainSvc.send(formModel);
				}
				function filterRefresh():void{
					mainData.refresh();
				}
	
			]]>
		</mx:Script>		
			<mx:HBox>
				
					
			<mx:Label text="Технологические устройства и их параметры" fontFamily="Verdana" fontWeight="bold" fontSize="14"/>
			<util:ContextHelpButton>
				<util:helpText>
					<![CDATA[
Сущность <B>устройство</B> представляет производственное оборудование, используемое для 
создания продукции из ингридиентов.

Каждое устройство обладает набором переменных величин, характеризующих его состояние в определенный
момент времени (<B>Параметры устройства</B>). Измеренное значение параметра в определенный момент 
называется <B>Измерение</B>.

Каждый параметр обладает следующими характеристиками:
<li>Наименование</li> - краткое название параметра

<li>Рекомендуемое значение</li> - значение, которое параметр должен принимать в лучшем случае.
Например, для параметра "Напряжение" для устройства "Лампочка" рекомендуемым значением будет 220.

<li>Минимизируется</li> - направление, в котором следует менять значение параметра, если не 
может быть выдержано рекомендуемое.
Пример: для лампочки, очевидно, стоит выбрать минимизацию - при большем напряжении она перегорит.

<li>Фиксирован</li> - если параметр фиксирован, это значит, что он не подлежит изменению нами.
Пример: "среднее колебание напряжения питания за час" мы изменять не можем, но параметр 
"напряжение питания" может быть изменен напрямую, следовательно не фиксирован.

<li>Активность</li> - неактивным параметр может быть из-за того, что мы не можем контролировать
его должным образом. Соответственно <B>рецепты</B>, зависимые от него тожем не могут выполнятся. 
]]>
				</util:helpText>					
			</util:ContextHelpButton>
			<mx:Label text="Сегодня : "/>
		<mx:Label text="" id="lbToday"/>
			</mx:HBox>
			<mx:HBox width="925" height="214">
				<mx:VBox height="212" width="527" horizontalAlign="center" >
				<mx:Label text="Устройства"  fontWeight="bold"/>
					<mx:DataGrid height="114" width="501" 
						id="dgData" 
						dataProvider="{mainData}"
						itemClick="bindSelected()">
						<mx:columns>
							<mx:DataGridColumn headerText="Ид.Номер" dataField="id" width="70"/>
							<mx:DataGridColumn headerText="Наименование" dataField="name"/>
							<mx:DataGridColumn dataField="Активн." labelFunction="util.activeToString" width="70"/>
						</mx:columns>
					</mx:DataGrid>
					<mx:HBox horizontalAlign="left" height="28" width="494"
						visible="{editable}">	
						<mx:FormItem label="Наименование:" 
							required="true" width="309">												
							<mx:TextInput id="tiName"/>
						</mx:FormItem>
						<mx:FormItem label="Активно:">
							<mx:CheckBox id="cbActive"/>
						</mx:FormItem>
						
					</mx:HBox>
					<mx:HBox horizontalAlign="center" height="27"
						visible="{editable}">
						<mx:Button label="Сохранить" click="saveSelected()"/>							
						<mx:Button label="Отмена" click="cancel()"/>
						<mx:Button label="Создать" click="createNew()"/>
					</mx:HBox>
				</mx:VBox>			
				<mx:VBox height="206" horizontalAlign="center" verticalAlign="center" width="367">				
	
					
					<mx:VBox id="filterPanel">
						<mx:Script>
							<![CDATA[
								[Bindable]
								public var filterPanelMinimized:Boolean=true;							
							]]>
						</mx:Script>
						<mx:HBox horizontalAlign="right" width="100%">
							<mx:FormItem label="Фильтр:" width="334">
								<mx:Button id="filterButton" label="{filterPanelMinimized ? &quot;-&quot; : &quot;+&quot;}" click="filterPanelMinimized = !filterPanelMinimized"/>
								
								<mx:VBox id="filterDetails" visible="{filterPanelMinimized ? false : true}">
								<mx:FormItem label="Показывать:" horizontalAlign="left" width="100%" cornerRadius="0" borderStyle="none" borderThickness="0">
									<mx:CheckBox id="cbShowActive" click="filterRefresh()" selected="true" label="Активные"/>
									<mx:CheckBox id="cbShowNonActive" click="filterRefresh()" selected="true" label="Неактивные"/>
								</mx:FormItem>	
								<mx:FormItem label="Шаблон имени:" >
						<mx:TextInput id="edFilter" text=".*" change="filterRefresh()"/>									
					</mx:FormItem>
													</mx:VBox>
																	
	
							</mx:FormItem>												
						</mx:HBox>					
					</mx:VBox>
				</mx:VBox>
			</mx:HBox>
		</mx:VBox>
		<mx:HBox width="932" height="218">		
			<mx:VBox height="100%" width="613" horizontalAlign="center" >
			<mx:Label text="Параметры устройств"  fontWeight="bold"/>
					<mx:DataGrid height="185" width="608" 
						id="dgChildData" 
						dataProvider="{selectedDeviceParameters}"
						itemClick="childBindSelected()">
						<mx:columns>
							<mx:DataGridColumn headerText="Ид.Номер" dataField="id" width="50"/>
							<mx:DataGridColumn headerText="Наименование" dataField="name" width="120"/>
							<mx:DataGridColumn headerText="Активн." labelFunction="util.activeToString" width="35"/>
							<mx:DataGridColumn headerText="Ед.изм" labelFunction="getParameterUnitName" width="50"/>
							<mx:DataGridColumn headerText="Фикс" labelFunction="util.fixedToString" width="30"/>
							<mx:DataGridColumn headerText="Рекоменд. зн-е" dataField="bestValue" width="70"/>
							<mx:DataGridColumn headerText="Мин-ем" labelFunction="util.minimizedToString" width="35"/>
						</mx:columns>
					</mx:DataGrid>				
			</mx:VBox>
			<mx:VBox height="199" width="286"
				visible="{editable}">
				<mx:FormItem label="Наименование:"
					required="true"
					width="100%">
					<mx:TextInput id="tiChildName"
						width="100%"/>				
				</mx:FormItem>
				<mx:FormItem label="Рек. зн:"
					required="true"
					width="100%">
					<mx:TextInput id="tiChildBestValue"
						width="100%"/>				
				</mx:FormItem>
				<mx:FormItem label="Ед.изм:"
					required="true"
					width="100%">
					<mx:ComboBox id="cbChildUnit" labelField="name" dataProvider="{availableUnits}"
						width="100%"/>								
				</mx:FormItem>
				<mx:HBox width="272" height="24">
					<mx:FormItem label="Фиксирован:" visible="true">
					<mx:CheckBox id="cbChildFixed"/>				
				</mx:FormItem>
				<mx:FormItem label="Минимизируемый:" visible="true">
					<mx:CheckBox id="cbChildMinimized"/>				
				</mx:FormItem>
				</mx:HBox>
				<mx:VBox height="22" cornerRadius="10" alpha="1.0" borderStyle="solid" borderThickness="0" borderColor="#5A0B15">
				<mx:FormItem label="Активность:">
					<mx:CheckBox id="cbChildActive"/>				
				</mx:FormItem>
				
			</mx:VBox>
				<mx:HBox>
					<mx:Button label="Новый" click="childCreateNew()"/>
					<mx:Button label="Сохранить" click="childSave()"/>
					<mx:Button label="Отмена" click="childBindSelected()"/>				
				</mx:HBox>		
			</mx:VBox>	
						
		</mx:HBox>
		<mx:DataGrid dataProvider="{errors}"
				visible="{errors.length>0}"
				width="100%"
				height="60">
				<mx:columns>
					<mx:DataGridColumn headerText="Ошибки"
						 dataField="message"/>
				</mx:columns>
		</mx:DataGrid>
	</mx:VBox>
</mx:VBox>