<?xml version="1.0" encoding="utf-8"?>
<mx:VBox horizontalAlign="center"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	creationComplete="init()" width="914" height="522">

		
		<mx:HTTPService id="mainSvc" 
		useProxy="false"
		method="GET"
		url="{mainDataSvcUrl}"
		result="httpResultHandler(event)"
		fault="httpFaultHandler(event)"/>
		
		<mx:Model id="formModel">		
		<root>
			<mode>{tiId.text as int>0 ? tiMode.text : &quot;NEW&quot;}</mode>
			<provider>{cbProvider.selectedItem.id}</provider>
			<consumer>{cbConsumer.selectedItem.id}</consumer>
			<id>{tiId.text}</id>		
			<active>{cbActive.selected == true ? "1" : "0"}</active>	
			<creationDate>{dfCreationDate.text}</creationDate>
			<doneDate>{dfDoneDate.text}</doneDate>
			
		</root>		
	</mx:Model>	
		
	<mx:Script>
		<![CDATA[
			import mx.events.CollectionEvent;
			import mx.automation.codec.ArrayPropertyCodec;
			import mx.validators.RegExpValidator;
			import mx.utils.StringUtil;
			import mx.rpc.http.mxml.HTTPService;
			import flash.sampler.getInvocationCount;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import components.Util;
			public var mainDataSvcUrl:String;
			public var mainDataUnitName:String;
			public var mainDataUnitVisualName:String;
			public var hideEffect:*;
			[Bindable] private var mainData:*;
            [Bindable] private var contragents:*;   
            [Bindable] private var availableContragents:ArrayCollection;
            	var util:Util = new Util();	
			public function init():void{
				createNew();				
				mainSvc.cancel();
				
				formModel.mode="FETCH";
				mainSvc.send(formModel);
					
			}
			
			private function httpFaultHandler(event:Event):void{
					 mx.controls.Alert.show(event.toString())	;
				
			} 
			 
			private function httpResultHandler(event:*):void{	
					contragents = util.extractItemCollection(event.result.contragents, 'contragent');
					availableContragents = util.getActiveItems(contragents);
				mainData = event.result.mainData;
				if (mainData != null ) {
					mainData['order'].filterFunction = mainFilterFunction;
				}
			} 
			private function mainFilterFunction(item:*){
				var result:Boolean=true;
				if (!cbShowNonActive.selected && item.active<=0)
					return false;
				if (!cbShowActive.selected && item.active>0)
					return false;					
				if (mx.utils.StringUtil.trim(edFilter.text).length>0) {
					if (!new RegExp(edFilter.text).test(item.provider))
						return false;
				}
				return result;
			} 
			function bindSelected():void{
					var item = dgData.selectedItem;
				if (dgData.selectedIndex>=0){
					cbActive.selected = (dgData.selectedItem.active == 1);
					tiId.text=dgData.selectedItem.id;
					dfCreationDate.text = dgData.selectedItem.creationDate;
					dfDoneDate.text = dgData.selectedItem.doneDate;
					cbProvider.selectedIndex = util.getItemPos(availableContragents, item.provider);
					cbConsumer.selectedIndex = util.getItemPos(availableContragents, item.consumer);
	
				}													
			}
			function createNew():void{
				tiId.text="";
				cbActive.selected=true;
				formModel.mode="NEW";
				dfCreationDate.text ="" ;
				dfDoneDate.text = "";
						
			}
			function cancel():void{
				bindSelected();
			}
			function saveSelected():void{
				
				formModel.mode="EDIT";
				mainSvc.cancel();	
				mainSvc.send(formModel);
				
			}
			function filterRefresh():void{
				mainData['order'].refresh();
			}
			function activeToString(item:Object, column:DataGridColumn):String{				
				return (item.active>0 ? "active" : "not active"); 
				
				
			}
			function getProviderName(item:Object, column:DataGridColumn):String{	
				var tmp = util.getItemById(contragents, item.provider);
				if (tmp == null) {
					return "";
				} else {
					return tmp.name;
				}					
			}
			function getConsumerName(item:Object, column:DataGridColumn):String{				
				var tmp = util.getItemById(contragents, item.consumer);
				if (tmp == null) {
					return "";
				} else {
					return tmp.name;
				}					
			}
		]]>
	</mx:Script>			
	
		<mx:Label text="Панель управления заказами" fontWeight="bold" fontSize="14"/>
		<mx:HBox x="0" y="0" width="898" height="461">
			<mx:VBox height="426" width="606" horizontalAlign="center" >
			
				<mx:DataGrid height="278" width="594" 
					id="dgData" 
					dataProvider="{mainData['order']}"
					itemClick="bindSelected()">
					<mx:columns>
						<mx:DataGridColumn headerText="Ид.Номер" dataField="id" width="50"/>
						<mx:DataGridColumn headerText="Владелец" dataField="provider" labelFunction="getProviderName"  width="100"/>
						<mx:DataGridColumn headerText="Контрагент"  dataField="consumer" labelFunction="getConsumerName" width="100"/>
						<mx:DataGridColumn headerText="Дата заказа" dataField="creationDate" width="60"/>
						<mx:DataGridColumn headerText="Дата вып-ния" dataField="doneDate" width="70"/>
						<mx:DataGridColumn dataField="Активн." labelFunction="activeToString" width="45"/>
					</mx:columns>
				</mx:DataGrid>
				<mx:HBox width="100%" height="87">
					<mx:VBox height="82" width="242">
						<mx:FormItem label="Владелец:"
						required="true">												
						<mx:ComboBox id="cbProvider"
							dataProvider="{availableContragents}"
							labelField="name"  
							width="150"/>
					</mx:FormItem>
						<mx:FormItem label="Контрагент:" 
						required="true">												
						<mx:ComboBox id="cbConsumer"
							dataProvider="{availableContragents}"
							labelField="name" 
							width="150"/>
					</mx:FormItem>
					</mx:VBox>
					<mx:VBox height="81" width="210">
						<mx:FormItem label="Дата заказа:" 
						required="true">												
						<mx:DateField id="dfCreationDate"
							text=""
							formatString="DD/MM/YY"/>
						</mx:FormItem>
						<mx:FormItem label="Дата выполнения:" 
						required="true">												
						<mx:DateField id="dfDoneDate"
							text=""
							formatString="DD/MM/YY"/>
						</mx:FormItem>
					</mx:VBox>
				
					<mx:VBox height="82" width="115">
						<mx:FormItem label="Активно:" width="111">
					<mx:CheckBox id="cbActive"/>
					</mx:FormItem>
					</mx:VBox>
				</mx:HBox>
				<mx:HBox width="100%" height="41">
					<mx:Button label="Сохранить" click="saveSelected()"/>							
					<mx:Button label="Отмена" click="cancel()"/>
					<mx:Button label="Создать" click="createNew()"/>	
				</mx:HBox>	
			</mx:VBox>			
			<mx:VBox height="232" horizontalAlign="center" verticalAlign="center" width="278">				
				<mx:VBox horizontalAlign="left" height="17" width="232">	
					<mx:TextInput id="tiMode" visible="false" text="EDIT"/>
					<mx:TextInput id="tiId" visible="false" text=""/>
					
					
				</mx:VBox>
				
				<mx:VBox id="filterPanel">
					<mx:Script>
						<![CDATA[
							[Bindable]
							public var filterPanelMinimized:Boolean=true;							
						]]>
					</mx:Script>
					<mx:HBox horizontalAlign="right" width="100%">
						<mx:FormItem label="Фильтр:" width="267">
							<mx:Button id="filterButton" label="{filterPanelMinimized ? &quot;-&quot; : &quot;+&quot;}" click="filterPanelMinimized = !filterPanelMinimized" width="96"/>
						</mx:FormItem>												
					</mx:HBox>					
					<mx:VBox id="filterDetails" visible="{filterPanelMinimized ? false : true}">												
						<mx:FormItem label="Показывать:" horizontalAlign="left" width="100%">
							<mx:CheckBox id="cbShowActive" click="filterRefresh()" selected="true" label="Активные"/>
							<mx:CheckBox id="cbShowNonActive" click="filterRefresh()" selected="true" label="Неактивные"/>
						</mx:FormItem>
						<mx:FormItem label="Выбирать по имени:">
							<mx:CheckBox id="cbShowProvider"   click="filterRefresh()" selected="true" label="Владельца"/>
							<mx:CheckBox id="cbShowComsumer" click="filterRefresh()" selected="false" label="Контрагента"/>
						</mx:FormItem>
						<mx:FormItem label="Шаблон имени:" >
							<mx:TextInput id="edFilter" text=".*" change="filterRefresh()"/>									
						</mx:FormItem>	
					</mx:VBox>					
				</mx:VBox>
			</mx:VBox>
		</mx:HBox>
	</mx:VBox>
