<?xml version="1.0" encoding="utf-8"?>
<mx:VBox horizontalAlign="center"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:comp="components.*"
	creationComplete="init()" width="1142" height="723">
	<!-- represents selected main item: PriceList -->
	<mx:Model id="formModel">		
		<root>
			<mode>EDIT</mode>			
			<id></id>
			<active>{cbActive.selected == true ? "1" : "0"}</active>
			<date>{dfDate.text}</date>
			<owner>{cbOwner.selectedItem.id}</owner>			
			<comment>{encodeURI(tiComment.text)}</comment>				
		</root>		
	</mx:Model>		
	
	<!-- represents selected subItem: PriceListItem -->
	<mx:Model id="childModel">
		<root>
			<mode>EDIT</mode>
			
			<id></id>
			<active>{cbChildActive.selected == true ? "1" : "0"}</active>
			
			<parent></parent>
			
			<price>{encodeURI(tiChildPrice.text)}</price>
			<product>{cbChildProductType.selectedItem.id}</product>
		</root>					
	</mx:Model>
	<mx:HTTPService id="mainSvc" 
		useProxy="false"
		method="GET"
		url="http://localhost:8080/bakery/svc.htm?svc=org.bakery.server.controllers.svc.impl.PriceListSvc"
		result="httpResultHandler(event)"
		fault="util.httpFaultHandler(event)"/>
	<mx:HTTPService id="childSvc" 
		useProxy="false"
		method="GET"
		url="http://localhost:8080/bakery/svc.htm?svc=org.bakery.server.controllers.svc.impl.PriceListItemSvc"
		result="httpChildResultHandler(event)"
		fault="util.httpFaultHandler(event)"/>
	<mx:VBox horizontalAlign="center" width="1065" height="648">	
	<mx:Script>
		<![CDATA[
			import mx.events.CollectionEvent;
			import mx.automation.codec.ArrayPropertyCodec;
			import mx.validators.RegExpValidator;
			import mx.utils.StringUtil;
			import mx.rpc.http.mxml.HTTPService;
			import flash.sampler.getInvocationCount;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import LogComp.Util;
			public var mainDataSvcUrl:String;
			public var childDataSvcUrl:String;
			public var hideEffect:*;
			[Bindable]
            private var mainData:ArrayCollection;
            
            [Bindable] private var units:ArrayCollection = new ArrayCollection();            
            [Bindable] private var availableUnits:ArrayCollection = new ArrayCollection();
            
            [Bindable] private var contragents:ArrayCollection = new ArrayCollection();            
            [Bindable] private var availableContragents:ArrayCollection = new ArrayCollection();

            [Bindable] private var addresses:ArrayCollection = new ArrayCollection();            

			[Bindable] private var productTypes:ArrayCollection = new ArrayCollection();            
            [Bindable] private var availableProductTypes:ArrayCollection = new ArrayCollection();
            
			[Bindable] private var priceListItems:ArrayCollection = new ArrayCollection();
			[Bindable] private var selectedPriceListItems:ArrayCollection = new ArrayCollection();     
			
			[Bindable]
	        private var errors:ArrayCollection = new ArrayCollection();       
			
			// XXX: It's dumb, change it
			var util:Util = new Util();
			
			function childBindSelected(){
				var item = dgChildData.selectedItem;
				if (item != null){
					cbChildActive.selected = (item.active == 1);
					childModel.id = item.id;
					cbChildProductType.selectedIndex = util.getItemPos(availableProductTypes, item.product);
					tiChildPrice.text = item.price;
				}
			}				
			function childSave(){
				childSvc.cancel();
				childSvc.send(childModel);
			}
			
			function getContragentName(item:Object, column:DataGridColumn):String{				
				var tmp = util.getItemById(contragents, item.owner);
				if (tmp == null) {
					return "";
				} else {
					return tmp.name;
				}					
			}
		
			function getProductTypeName(item:Object, column:DataGridColumn):String{				
				var tmp = util.getItemById(productTypes, item.product);
				if (tmp == null) {
					return "";
				} else {
					return tmp.name;
				}					
			}
			
			public function init():void{
				createNew();				
				mainSvc.cancel();
				formModel.mode="FETCH";
				mainSvc.send(formModel);				
			}

			private function httpResultHandler(event:*):void{
				errors = util.getHttpRespondedErrors(event);
				units = util.extractItemCollection(event.result.units, 'unit');
				contragents = util.extractItemCollection(event.result.contragents, 'contragent');
				addresses = util.extractItemCollection(event.result.addresses, 'address');
				productTypes = util.extractItemCollection(event.result.productTypes, 'producttype');
				priceListItems = util.extractItemCollection(event.result.priceListItems, 'pricelistitem');
				            
				availableUnits = util.getActiveItems(units);
				availableContragents = util.getActiveItems(contragents);			            
				availableProductTypes = util.getActiveItems(productTypes);
				
				          
				mainData =  util.extractItemCollection(event.result.mainData, 'pricelist');
				if (mainData != null) {
					mainData.filterFunction = mainFilterFunction;
				}
			} 
			private function httpChildResultHandler(event:*):void{
				errors = util.getHttpRespondedErrors(event);
				priceListItems = util.extractItemCollection(event.result.mainData, 'pricelistitem');
				bindSelected(true);
			} 
			private function mainFilterFunction(item:*){
				var result:Boolean=true;
				if (!cbShowNonActive.selected && item.active<=0)
					return false;
				if (!cbShowActive.selected && item.active>0)
					return false;					
				if (mx.utils.StringUtil.trim(edFilter.text).length>0) {
					if (!new RegExp(edFilter.text).test(item.name))
						return false;
				}
				return result;
			} 
			private var previousSelected:int=-104;
			
			function bindSelected(refreshAnyWay:Boolean):void{	
				var item = dgData.selectedItem;			
				if ((refreshAnyWay) || (dgData.selectedIndex >= 0) && (previousSelected != dgData.selectedIndex)) {
					previousSelected = dgData.selectedIndex;
					cbActive.selected = (dgData.selectedItem.active == 1);
					if (dgData.selectedItem.date != null) {
						dfDate.text=dgData.selectedItem.date;
					} else {
						dfDate.text="";
					}	
					cbOwner.selectedIndex = util.getItemPos(availableContragents, item.owner);														
					tiComment.text=dgData.selectedItem.comment;
					selectedPriceListItems.removeAll();
					formModel.id = dgData.selectedItem.id;
					childModel.parent = formModel.id;				
					for each (var priceListItem in priceListItems){
						if (priceListItem.parent == dgData.selectedItem.id){
							selectedPriceListItems.addItem(priceListItem);
						}
					}
					selectedPriceListItems.refresh();
				}													
			}
			function createNew():void{
				formModel.id="";
				cbActive.selected=true;		
				tiComment.text="";
				cbOwner.selectedIndex = -1;
			}
			function childCreateNew():void{
				childModel.id="";
				cbChildActive.selected = true;
				cbChildProductType.selectedIndex = -1;
				tiChildPrice.text = "";
			}
			function cancel():void{
				bindSelected(false);
			}
			function saveSelected():void{
				formModel.mode="EDIT";
				mainSvc.cancel();	
				mainSvc.send(formModel);
			}
			function filterRefresh():void{
				mainData.refresh();
			}

		]]>
	</mx:Script>	
		<mx:VBox width="1053" height="382">	
		<mx:HBox>
			<mx:Label text="           " width="334" height="32"/>	
			<mx:Label text="Прайсы" fontFamily="Verdana" fontWeight="normal" fontSize="24" width="140"/>
			</mx:HBox>
			<mx:HBox width="1050" height="333">
				<mx:VBox height="329" width="766" horizontalAlign="center" >
				<mx:Label  text=" Заголовки прайсов " fontWeight="bold" fontSize="11"/>
					<mx:DataGrid height="236" width="756" 
						id="dgData" 
						dataProvider="{mainData}"
						itemClick="bindSelected(false)">
						<mx:columns>
							<mx:DataGridColumn headerText="Ид.Номер" dataField="id" width="65"/>
							<mx:DataGridColumn headerText="Контрагент" labelFunction="getContragentName" width="150"/>
							<mx:DataGridColumn headerText="Дата" dataField="date" width="80"/>
							<mx:DataGridColumn headerText="Комментарий" dataField="comment"/>
							<mx:DataGridColumn headerText="Активн." labelFunction="util.activeToString" width="55"/>						
						</mx:columns>
					</mx:DataGrid>
					<mx:HBox width="723" height="57">
					<mx:VBox horizontalAlign="left" height="54" width="339">
						
					<mx:FormItem label="Контрагент:" 
							required="true" fontWeight="bold">												
							<mx:ComboBox id="cbOwner"
								dataProvider="{availableContragents}"
								labelField="name" width="206" fontWeight="normal"/>
						</mx:FormItem>	
						<mx:HBox width="327" fontWeight="bold">
						<mx:FormItem label="Активно:"
							required="true">
							<mx:CheckBox id="cbActive"/>
						</mx:FormItem>
						
						<mx:FormItem label="Дата:" 
							required="true">												
							<mx:DateField id="dfDate"
								text=""
								formatString="DD/MM/YY" fontWeight="normal" width="112"/>
						</mx:FormItem>
						</mx:HBox>
						</mx:VBox>
						<mx:VBox width="352">
						<mx:FormItem label="Комментарий:" fontWeight="bold">												
							<mx:TextInput id="tiComment" width="190" height="25" fontWeight="normal"/>
						</mx:FormItem>
						<mx:HBox>
					<mx:Button label="Сохранить" click="saveSelected()"/>
					<mx:Button label="Отмена" click="cancel()"/>
					<mx:Button label="Создать" click="createNew()"/>
						</mx:HBox>
						</mx:VBox>
						</mx:HBox>
				</mx:VBox>			
				<mx:VBox height="204" horizontalAlign="center" verticalAlign="center" width="270">				
	
					
					<mx:VBox id="filterPanel">
						<mx:Script>
							<![CDATA[
								[Bindable]
								public var filterPanelMinimized:Boolean=true;							
							]]>
						</mx:Script>
						<mx:HBox horizontalAlign="right" width="100%">
							<mx:FormItem label="Фильтр:" width="266" height="105">
								<mx:Button id="filterButton" label="{filterPanelMinimized ? &quot;-&quot; : &quot;+&quot;}" click="filterPanelMinimized = !filterPanelMinimized"/>
								
								<mx:VBox id="filterDetails" visible="{filterPanelMinimized ? false : true}">
								<mx:FormItem label="Показывать:" horizontalAlign="left" width="100%" cornerRadius="0" borderStyle="none" borderThickness="0">
									<mx:CheckBox id="cbShowActive" click="filterRefresh()" selected="true" label="Активные"/>
									<mx:CheckBox id="cbShowNonActive" click="filterRefresh()" selected="true" label="Неактивные"/>
								</mx:FormItem>	
								<mx:FormItem label="Шаблон имени:"  width="202">
						<mx:TextInput id="edFilter" text=".*" change="filterRefresh()" width="88"/>									
					</mx:FormItem>
																</mx:VBox>
			
							</mx:FormItem>												
						</mx:HBox>					
					</mx:VBox>
				</mx:VBox>
			</mx:HBox>
		</mx:VBox>
		<mx:HBox width="1026" height="255">		
			<mx:VBox height="254" width="773" horizontalAlign="center" >
				<mx:Label  text="Прайс" fontWeight="bold" fontSize="11"/>
					<mx:DataGrid height="226" width="758" 	id="dgChildData" 
						dataProvider="{selectedPriceListItems}"
						itemClick="childBindSelected()">
						<mx:columns>
							<mx:DataGridColumn headerText="Ид.Номер" dataField="id" width="35"/>
							<mx:DataGridColumn headerText="Продукт" labelFunction="getProductTypeName" width="150"/>
							<mx:DataGridColumn headerText="Активность" labelFunction="util.activeToString" width="40"/>
							<mx:DataGridColumn headerText="Цена" dataField="price" width="50"/>
						</mx:columns>
					</mx:DataGrid>				
			</mx:VBox>
			<mx:VBox height="166">
				<mx:FormItem label="Продукт:" width="218"
					required="true" fontWeight="bold">
					<mx:ComboBox id="cbChildProductType"
						dataProvider="{availableProductTypes}"
						labelField="name" width="140" fontWeight="normal"/>				
				</mx:FormItem>
				<mx:FormItem label="Цена:"
					required="true" fontWeight="bold">
					<mx:TextInput id="tiChildPrice" fontWeight="normal"/>				
				</mx:FormItem>
				<mx:FormItem label="Активность:" fontWeight="bold">
					<mx:CheckBox id="cbChildActive"/>				
				</mx:FormItem>	
				<mx:HBox>
					<mx:Button label="Новый" click="childCreateNew()"/>
					<mx:Button label="Сохранить" click="childSave()"/>
					<mx:Button label="Отмена" click="childBindSelected()"/>				
				</mx:HBox>		
			</mx:VBox>	
						
		</mx:HBox>
	</mx:VBox>
	<mx:DataGrid dataProvider="{errors}"
			visible="{errors.length>0}"
			width="1022"
			height="62">
			<mx:columns>
				<mx:DataGridColumn headerText="Ошибки"
					 dataField="message"/>
			</mx:columns>
	</mx:DataGrid>
</mx:VBox>